/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controllers.ConsumidorAPI;
import java.awt.print.PrinterException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONException;

/**
 *
 * @author Lucas Godoy
 */
public class ViewRelatorio extends javax.swing.JFrame {

    String ip = "localhost";

    public ViewRelatorio() {
        initComponents();
        pesquisa1();
    }

    private void pesquisa1() {
        DefaultTableModel model = (DefaultTableModel) tableRelatorio.getModel();
        model.setNumRows(0);
        JSONArray my_obj = null;
        String url = "http://" + ip + ":3030/reports/catm";
        try {
            ConsumidorAPI consumidor = ConsumidorAPI.getInstance();
            my_obj = new JSONArray(consumidor.doGet(url));
        } catch (JSONException jSONException) {
        }

        switch (System.getProperty("code")) {
            case "200":
                for (int i = 0; i < my_obj.length(); i++) {
                    model.addRow(new Object[]{my_obj.getJSONObject(i).getString("name"), my_obj.getJSONObject(i).getString("type"), my_obj.getJSONObject(i).getInt("count")});
                }
                System.setProperty("code", String.valueOf(0));
                break;
            case "400":
                JOptionPane.showMessageDialog(null, "Erro ao gerar o relatório!", "CRUD - Informa:", JOptionPane.ERROR_MESSAGE);
                System.setProperty("code", String.valueOf(0));
                this.dispose();
                new ViewHomePage().setVisible(true);
                break;
            case "404":
                JOptionPane.showMessageDialog(null, "Nenhum registro foi encontrado.", "CRUD - Informa:", JOptionPane.ERROR_MESSAGE);
                System.setProperty("code", String.valueOf(0));
                this.dispose();
                new ViewHomePage().setVisible(true);
                break;
            default:
                break;
        }
        JSONArray my_obj2 = null;
        String url2 = "http://" + ip + ":3030/reports/toc";
        try {
            ConsumidorAPI consumidor = ConsumidorAPI.getInstance();
            my_obj2 = new JSONArray(consumidor.doGet(url2));
        } catch (JSONException jSONException) {
        }

        switch (System.getProperty("code")) {
            case "200":
                for (int i = 0; i < my_obj2.length(); i++) {
                    if (my_obj2.getJSONObject(i).getString("category").equals("Importação")) {
                        txtImport.setText(String.valueOf(my_obj2.getJSONObject(i).getInt("count")));
                    } else if (my_obj2.getJSONObject(i).getString("category").equals("Exportação")) {
                        txtExport.setText(String.valueOf(my_obj2.getJSONObject(i).getInt("count")));
                    }
                }
                System.setProperty("code", String.valueOf(0));
                break;
            case "400":
                JOptionPane.showMessageDialog(null, "Erro ao gerar o relatório!", "CRUD - Informa:", JOptionPane.ERROR_MESSAGE);
                System.setProperty("code", String.valueOf(0));
                this.dispose();
                new ViewHomePage().setVisible(true);
                break;
            case "404":
                JOptionPane.showMessageDialog(null, "Nenhum registro foi encontrado.", "CRUD - Informa:", JOptionPane.ERROR_MESSAGE);
                System.setProperty("code", String.valueOf(0));
                this.dispose();
                new ViewHomePage().setVisible(true);
                break;
            default:
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRelatorio = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtImport = new javax.swing.JLabel();
        txtExport = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Relatório");

        tableRelatorio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cliente", "Tipo", "Movimentações"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRelatorio.setRowHeight(25);
        tableRelatorio.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tableRelatorioAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tableRelatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRelatorioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableRelatorio);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/001-boto-voltar.png"))); // NOI18N
        jButton6.setText("Voltar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel1.setText("Exportação:");

        jLabel2.setText("Importação:");

        txtImport.setText("0");

        txtExport.setText("0");

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/001-boto-voltar.png"))); // NOI18N
        jButton7.setText(" Extrair para PDF");
        jButton7.setMaximumSize(new java.awt.Dimension(200, 35));
        jButton7.setMinimumSize(new java.awt.Dimension(200, 35));
        jButton7.setPreferredSize(new java.awt.Dimension(200, 35));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtImport, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(326, 326, 326)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtExport, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtImport)
                    .addComponent(jLabel1)
                    .addComponent(txtExport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        this.dispose();
        new ViewHomePage().setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void tableRelatorioAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tableRelatorioAncestorAdded

    }//GEN-LAST:event_tableRelatorioAncestorAdded

    private void tableRelatorioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRelatorioMouseClicked

    }//GEN-LAST:event_tableRelatorioMouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String data = new SimpleDateFormat("dd/MM/yyyy").format(new Date(System.currentTimeMillis()));
        try {
            tableRelatorio.print(javax.swing.JTable.PrintMode.FIT_WIDTH,
                    new java.text.MessageFormat("Consulta realizada em: " + data), // titulo da pagina
                    new java.text.MessageFormat("Página {0}"));

        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(null, "Não foi possível imprimir\n" + ex.getMessage());
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewRelatorio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewRelatorio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableRelatorio;
    private javax.swing.JLabel txtExport;
    private javax.swing.JLabel txtImport;
    // End of variables declaration//GEN-END:variables
}
